{"version":3,"sources":["components/WeatherCard.js","components/Temp.js","App.js","index.js"],"names":["WeatherCard","tempInfo","useState","weatherState","setweatherState","temp","humidity","pressure","weathermood","name","speed","country","sunset","useEffect","date","Date","timeStr","getHours","getMinutes","className","toLocaleString","Temp","searchValue","setsearchValue","settempInfo","getWeatherInfo","a","url","fetch","res","json","data","main","weather","wind","sys","console","log","type","placeholder","id","autoFocus","value","onChange","event","target","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d5b4855.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst WeatherCard = ({ tempInfo }) => {\r\n  const [weatherState, setweatherState] = useState(\"\");\r\n\r\n  const {\r\n    temp,\r\n    humidity,\r\n    pressure,\r\n    weathermood,\r\n    name,\r\n    speed,\r\n    country,\r\n    sunset,\r\n  } = tempInfo;\r\n\r\n  useEffect(() => {\r\n    if (weathermood) {\r\n      switch (weathermood) {\r\n        case \"Clouds\":\r\n          setweatherState(\"wi-day-cloudy\");\r\n          break;\r\n        case \"Haze\":\r\n          setweatherState(\"wi-fog\");\r\n          break;\r\n        case \"Clear\":\r\n          setweatherState(\"wi-day-Sunny\");\r\n          break;\r\n        case \"Rain\":\r\n          setweatherState(\"wi-day-Rainy\");\r\n          break;\r\n\r\n        default:\r\n          setweatherState(\"wi-day-Sunny\");\r\n          break;\r\n      }\r\n    }\r\n  }, [weathermood]);\r\n\r\n  let sec = sunset;\r\n  let date = new Date(sec * 1000);\r\n  let timeStr = `${date.getHours()}:${date.getMinutes()}`;\r\n\r\n  return (\r\n    <>\r\n      {/* main div with weather details starts  */}\r\n\r\n      <article className=\"widget\">\r\n        {/* //icon div starts  */}\r\n        <div className=\"weatherIcon\">\r\n          <i className={`wi ${weatherState}`}></i>\r\n        </div>\r\n        {/* //icon div ends  */}\r\n        {/* // weather detail div starts */}\r\n        <div className=\"weatherInfo\">\r\n          <div className=\"temperature\">\r\n            <span>{temp}&deg;</span>\r\n          </div>\r\n\r\n          <div className=\"description\">\r\n            <div className=\"weatherCondition\">{weathermood}</div>\r\n            <div className=\"place\">\r\n              {name},{country}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* // weather detail div ends */}\r\n\r\n        {/* date and time div starts  */}\r\n\r\n        <div className=\"date\">{new Date().toLocaleString()}</div>\r\n\r\n        {/* date and time div ends  */}\r\n\r\n        {/* our four colmn section of weather data starts */}\r\n\r\n        <div className=\"extra-temp\">\r\n          <div className=\"temp-info-minmax\">\r\n            <div className=\"two-sided-section\">\r\n              <p>\r\n                <i className={\"wi wi-sunset\"}></i>\r\n              </p>\r\n              <p className=\"extra-info-leftside\">\r\n                {timeStr} <br />\r\n                Sunset\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"two-sided-section\">\r\n              <p>\r\n                <i className={\"wi wi-humidity\"}></i>\r\n              </p>\r\n              <p className=\"extra-info-leftside\">\r\n                {humidity}\r\n                <br />\r\n                Humidity\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"weather-extra-info\">\r\n            <div className=\"two-sided-section\">\r\n              <p>\r\n                <i className={\"wi wi-rain\"}></i>\r\n              </p>\r\n              <p className=\"extra-info-leftside\">\r\n                {pressure} <br />\r\n                Pressure\r\n              </p>\r\n            </div>\r\n            <div className=\"two-sided-section\">\r\n              <p>\r\n                <i className={\"wi wi-strong-wind\"}></i>\r\n              </p>\r\n              <p className=\"extra-info-leftside\">\r\n                {speed}km/hr\r\n                <br />\r\n                Speed\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* our four colmn section of weather data ends */}\r\n      </article>\r\n\r\n      {/* main div with weather details ends  */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WeatherCard;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport \"./style.css\";\r\nimport WeatherCard from \"./WeatherCard\";\r\n\r\nconst Temp = () => {\r\n  const [searchValue, setsearchValue] = useState(\"Mumbai\");\r\n\r\n  const [tempInfo, settempInfo] = useState({})\r\n\r\n  const getWeatherInfo = async () => {\r\n    try {\r\n      let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric&appid=d5b3031d793cd247d30322ebde7b69cd`;\r\n\r\n      const res = await fetch(url);\r\n\r\n      const data = await res.json();\r\n\r\n      const { temp, humidity, pressure } = data.main;\r\n\r\n      const { main: weathermood } = data.weather[0];\r\n\r\n      const { name } = data;\r\n\r\n      const { speed } = data.wind;\r\n\r\n      const { country, sunset } = data.sys;\r\n\r\n      const myNewWeatherInfo = {\r\n        temp,\r\n        humidity,\r\n        pressure,\r\n        weathermood,\r\n        name,\r\n        speed,\r\n        country,\r\n        sunset,\r\n      };\r\n\r\n\r\n      settempInfo(myNewWeatherInfo)\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getWeatherInfo();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {/* search part div starts  */}\r\n      <div className=\"wrap\">\r\n        <div className=\"search\">\r\n          <input\r\n            type=\"search\"\r\n            className=\"searchTerm\"\r\n            placeholder=\"Enter City\"\r\n            name=\"\"\r\n            id=\"search\"\r\n            autoFocus\r\n            value={searchValue}\r\n            onChange={(event) => setsearchValue(event.target.value)}\r\n          />\r\n          <button\r\n            className=\"searchButton\"\r\n            type=\"button\"\r\n            onClick={getWeatherInfo}\r\n          >\r\n            Search\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {/* search part div ends */}\r\n\r\n     \r\n\r\n<WeatherCard  tempInfo={tempInfo}    />\r\n\r\n\r\n\r\n\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Temp;\r\n","import React from 'react'\nimport Temp from './components/Temp'\n\nconst App = () => {\n  return (\n    <div>\n     <Temp/>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}